@import url("https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap");
$font-family-sans-serif: "Open Sans", sans-serif;
$font-family-base: $font-family-sans-serif;
$headings-font-family: "Roboto Condensed", sans-serif;

$primary: rgb(75, 86, 199);
$success: rgb(31, 149, 102);
$info: rgb(15, 101, 145);
$warning: rgb(227, 154, 8);
$danger: rgb(158, 32, 23);
$light: rgb(190, 190, 190);
$dark: rgb(34, 35, 36);
$white: #fff;
$black: #000;
$gray: #bcbcbc;
$blue: #007bff;
$indigo: #6610f2;
$purple: #6f42c1;
$pink: #e83e8c;
$list: rgb(34, 34, 36);
$body: #353353;
$all: #0c0a2b;
$allight: #f3f5d4;
$gold: #c0a868;
/* role color */
$color-admin-start: #009ffd;
$color-admin-end: #2a2a72;
$color-moderator-start: orange;
$color-moderator-end: red;
$color-basic-dark: darken(#cd7f32, 15%);
$color-basic-darker: darken(#cd7f32, 30%);
$color-medium-dark: darken(silver, 15%);
$color-basic: #cd7f32;
$color-medium: silver;
$color-pro: gold;
$color-basic-dark: darken($color-basic, 15%);
$color-basic-darker: darken($color-basic, 30%);
$color-medium-dark: darken($color-medium, 15%);
$color-medium-darker: darken($color-medium, 30%);
$color-pro-dark: darken($color-pro, 15%);
$color-pro-darker: darken($color-pro, 30%);
$colors-admin: #ffdd55, #ff543e, #cd7f32, #c837ab, #3b89ec, #009ffd, #2a2a72, #c837ab, #3b89ec, #ffdd55, #ff543e,
	#c837ab, #3b89ec;
$colors-moderator: #ffdd55, #ff543e, #c837ab, #3b89ec, #2a2a72;
$colors-basic: ($color-basic, $color-basic-dark, $color-basic-darker);
$colors-medium: ($color-medium, $color-medium-dark, $color-medium-darker);
$colors-pro: ($color-pro, $color-pro-dark, $color-pro-darker);

$theme-colors: (
	"primary": $primary,
	"success": $success,
	"info": $info,
	"warning": $warning,
	"danger": $danger,
	"light": $light,
	"dark": $dark,
	"white": $white,
	"black": $black,
	"gray": $gray,
	"blue": $blue,
	"indigo": $indigo,
	"purple": $purple,
	"pink": $pink,
	"list": $list,
	"body": $body,
	"all": $all,
	"allight": $allight,
	"basic": $color-basic,
	"basic-dark": $color-basic-dark,
	"basic-darker": $color-basic-darker,
	"medium": $color-medium,
	"medium-dark": $color-medium-dark,
	"medium-darker": $color-medium-darker,
	"pro": $color-pro,
	"pro-dark": $color-pro-dark,
	"pro-darker": $color-pro-darker,
	"gold": $gold,
);

// Definisci i tuoi valori di spaziatura
$spacer: 1rem;
$spacers: (
	0: 0,
	1: (
		$spacer * 0.25,
	),
	// Aggiusta questi valori come desideri
	2:
		(
			$spacer * 0.5,
		),
	3: $spacer,
	4: (
		$spacer * 1.5,
	),
	5: (
		$spacer * 3,
	),
);

@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";

// 3. Importa Bootstrap per avere accesso alle strutture e ai mixins
@import "~bootstrap/scss/bootstrap";

:root {
	@each $name, $color in $theme-colors {
		--#{$name}: #{$color};
	}
}

[data-theme="light"] {
	@each $name, $color in $theme-colors {
		--#{$name}: #{lighten($color, 20%)};
	}
}

@media (prefers-color-scheme: lighten) {
	:root {
		@each $name, $color in $theme-colors {
			--#{$name}: #{lighten($color, 20%)};
		}
	}
}

// mixin per la generazione di scale di trasformazione esempio di classe scale-1, scale-2, scale-3, ecc.
@mixin generate-scales($max: 10) {
	@for $i from 1 through $max {
		$scale-value: 1 + ($i * 0.01); // Inizia da 1.01 per scale-1
		.scale-#{$i} {
			transform: scale($scale-value);
		}
	}
}

@include generate-scales;

// mixin per la dimensione del font responsive esempio di classe responsive-font-size-16
@mixin responsive-font-size($size) {
	font-size: $size;
	@media (max-width: 600px) {
		font-size: $size * 0.9;
	}
	@media (max-width: 400px) {
		font-size: $size * 0.8;
	}
}

.large-text {
	@include responsive-font-size(24px);
}

.small-text {
	@include responsive-font-size(14px);
}

// Mixin per generare varianti di hover per colore di sfondo, testo e bordo esempio di classe bg-primary-hover, text-primary-hover, border-primary-hover
@mixin generate-hover-variants {
	@each $name, $color in $theme-colors {
		// Sfondo al hover
		.bg-#{$name}-hover:hover {
			background-color: lighten($color, 10%);
		}

		// Testo al hover
		.text-#{$name}-hover:hover {
			color: lighten($color, 10%);
		}

		// Bordo al hover
		.border-#{$name}-hover:hover {
			border-color: lighten($color, 10%);
		}
	}
}

@include generate-hover-variants;

@mixin card-variant($bg-color) {
	background-color: $bg-color !important;
	color: if(lightness($bg-color) > 50, $dark, $white) !important; // Scelta iniziale del colore del testo
	border-color: darken($bg-color, 5%) !important;
	transition: all 0.3s ease-in-out;

	&:hover {
		background-color: lighten($bg-color, 10%) !important; // Chiarisce il colore di sfondo

		// Mantieni il colore del testo invariato per garantire il contrasto
		color: if(lightness($bg-color) > 50, $dark, $white) !important;
		transform: scale(1.01);
		z-index: 3;
	}
}

@each $color-name, $color-value in $theme-colors {
	.my-card.card-#{$color-name} {
		@include card-variant($color-value);
	}
}

// Creazione dinamica delle varianti di colore
@each $name, $color in $theme-colors {
	@for $i from 1 through 5 {
		.#{$name}-light-#{5 * $i} {
			background-color: lighten($color, 5% * $i);
		}
		.#{$name}-dark-#{5 * $i} {
			background-color: darken($color, 5% * $i);
		}
	}
}

@each $name, $color in $theme-colors {
	@for $i from 1 through 5 {
		.text-#{$name}-light-#{5 * $i} {
			color: lighten($color, 5% * $i);
		}
		.text-#{$name}-dark-#{5 * $i} {
			color: darken($color, 5% * $i);
		}
	}
}

@each $name, $color in $theme-colors {
	@for $i from 1 through 5 {
		.border-#{$name}-light-#{5 * $i} {
			border-color: lighten($color, 5% * $i);
		}
		.border-#{$name}-dark-#{5 * $i} {
			border-color: darken($color, 5% * $i);
		}
	}
}

@each $name, $color in $theme-colors {
	@for $i from 1 through 5 {
		.bg-#{$name}-light-#{5 * $i} {
			background-color: lighten($color, 5% * $i);
		}
		.bg-#{$name}-dark-#{5 * $i} {
			background-color: darken($color, 5% * $i);
		}
	}
}

@for $i from 1 through 10 {
	.zone-#{$i} {
		min-height: 150px + (100px * ($i - 1));
		max-height: 255px + (100px * ($i - 1));
		overflow-y: scroll;
	}
}

@for $i from 1 through 5 {
	@each $dir in (top, bottom, start, end) {
		.m#{str-slice($dir, 1, 1)}--#{$i} {
			margin-#{$dir}: -0.25rem * $i;
		}
	}

	.mx--#{$i} {
		margin-right: -0.25rem * $i;
		margin-left: -0.25rem * $i;
	}

	.my--#{$i} {
		margin-top: -0.25rem * $i;
		margin-bottom: -0.25rem * $i;
	}
}

// Mixin per applicare gli stili di bordo e sfondo
@mixin roleGradient($colors, $duration: 3s, $text: false) {
	background-size: 300% 300%;
	background-image: linear-gradient(270deg, $colors...);
	animation: slideGradient $duration linear infinite;

	@if $text {
		-webkit-background-clip: text;
		background-clip: text;
		color: transparent;
		display: inline-block; // Aggiunto per assicurarsi che il clip funzioni.
	}
}

// Creazione dell'animazione del gradiente per tutti i ruoli
@keyframes slideGradient {
	0% {
		background-position: 100% 50%;
	}
	100% {
		background-position: 0% 50%;
	}
}

// Applica il mixin per ciascun ruolo con i propri colori e tempi
.user-cards-container {
	.card-role-admin {
		@include roleGradient($colors-admin, 10s);
	}

	.card-role-moderator {
		@include roleGradient($colors-moderator, 7s);
	}

	.card-role-basic {
		@include roleGradient($colors-basic, 5s);
	}

	.card-role-medium {
		@include roleGradient($colors-medium, 4s);
	}

	.card-role-pro {
		@include roleGradient($colors-pro, 3s);
	}
}

.gradient-admin {
	@include roleGradient($colors-admin, 10s, true);
}

.gradient-moderator {
	@include roleGradient($colors-moderator, 7s, true);
}

.gradient-basic {
	@include roleGradient($colors-basic, 5s, true);
}

.gradient-medium {
	@include roleGradient($colors-medium, 4s, true);
}

.gradient-pro {
	@include roleGradient($colors-pro, 3s, true);
}
// $grid-breakpoints: (
// 	xs: 0,
// 	sm: 576px,
// 	md: 768px,
// 	lg: 992px,
// 	xl: 1280px,
// 	xxl: 1600px,
// );

// $container-max-widths: (
// 	sm: 540px,
// 	md: 720px,
// 	lg: 960px,
// 	xl: 1220px,
// 	xxl: 1520px,
// );

@import "../../node_modules/bootstrap/scss/bootstrap";

// 8. Add additional custom code here

body {
	@include responsive-font-size(16px);
	background-color: $black;
}

footer {
	background-color: $all;
}

.truncate-multiline {
	display: -webkit-box;
	-webkit-line-clamp: 3;
	-webkit-box-orient: vertical;
	overflow: hidden;
	text-overflow: ellipsis;
}

.point {
	cursor: pointer;
}

.btn-starred svg {
	fill: rgb(70, 147, 248);
}

// .card-base {
// 	// Aggiungiamo un bordo leggero e arrotondato
// 	border: 1px solid $light;
// 	border-radius: 0.25rem;
// 	// Aggiungiamo un'ombra leggera per dare profondità
// 	box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
// 	// Aggiungiamo un padding interno per mantenere il contenuto distanziato dal bordo
// 	padding: 1rem;
// 	// Impostiamo un colore di sfondo predefinito, che poi potrà essere sovrascritto
// 	background-color: $light;
// 	// Assicurati che il testo all'interno sia leggibile e ben contrastato
// 	color: $dark;

// 	// Puoi aggiungere qui altre proprietà CSS che ritieni possano essere utili per la base di una card
// }
.card {
	border: 0;
	background-color: $all;
	color: white;
	// backdrop-filter: blur(10px);
}
// Se desideri modificare il colore di sfondo utilizzando le classi di utility di Bootstrap, puoi aggiungere qualcosa come:
// .card-base-primary {
// 	@extend .card-base;
// 	background-color: $primary;
// 	border-color: darken($primary, 15%);
// }
// .card-base-success {
// 	@extend .card-base;
// 	background-color: $success;
// 	border-color: darken($success, 15%);
// }

.img-circle {
	border-radius: 50%;
	// margin-inline: auto;
	display: block;
	transition: transform 0.3s ease-in-out;
	-webkit-transition: all 0.3s ease-in-out;
	&:hover {
		transform: scale(1.02);
		// box-shadow: 0px 10px 10px 0 rgba(0, 0, 0, 0.6);
	}
}

.inverted-image {
	filter: invert(100%);
}

/* Dimensioni specifiche */
.img-xxs {
	width: 30px;
	height: 30px;
}

.img-xs {
	width: 50px;
	height: 50px;
}

.img-sm {
	width: 100px;
	height: 100px;
}

.img-md {
	width: 150px;
	height: 150px;
}

.img-lg {
	width: 200px;
	height: 200px;
}
.img-xl {
	width: 300px;
	height: 300px;
}

.img-xxl {
	width: 400px;
	height: 400px;
}

.img-xxxl {
	width: 500px;
	height: 500px;
}

.tooltip {
	position: absolute;
	bottom: 100%;
	left: 50%;
	transform: translateX(-50%);
	margin-bottom: 10px;
	padding: 8px;
	color: white;
	background-color: black;
	border-radius: 4px;
	text-align: center;
}

/* Stili per modificare la scrollbar della pagina */
::-webkit-scrollbar {
	width: 10px;
	border-radius: 5px;
}

::-webkit-scrollbar-track {
	background-color: $light;
	border-radius: 5px;
}

::-webkit-scrollbar-thumb {
	background-color: $all;
	border-radius: 5px;
}

::-webkit-scrollbar-thumb:hover {
	background-color: darken($all, 10%);
}

// dropdown
.flex-center {
	display: flex;
	align-items: center;
	justify-content: center;
}

.my-nav .dropdown-menu[data-bs-popper] {
	top: 130%;
	left: -69px;
	background-color: $all;
	color: white;
	&:hover {
		color: white;
		background-color: $all;
	}
	&:active {
		color: white;
		background-color: $all;
	}
	&:focus {
		color: white;
		background-color: $all;
	}
	&:focus-visible {
		color: white;
		background-color: $all;
	}
}

.abbonamento {
	transition: all 0.3s ease-in-out;
}

.abbonamento:hover {
	transform: scale(1.2);
	// box-shadow: 0px 10px 10px 0 rgba(0, 0, 0, 0.6);
}

.other-card.card {
	background-color: lighten($body, 20%);
	transition: all 0.3s ease-in-out;
	&:hover {
		background-color: lighten($body, 10%);
	}
}

.volume-col {
	background-color: $all;
}

.my-item {
	background-color: $all;
	color: $white;
	border: 0;
	transition: all 0.3s ease-in-out;
	&:hover {
		background-color: lighten($all, 20%);
	}
}

.a-news {
	color: lighten($body, 35%);
}

.perc-success {
	color: lighten($success, 30%);
}

.perc-danger {
	color: lighten($danger, 30%);
}

/* DA SPOSTARE NEL PARTIAL DEI POST*/
.post-img {
	max-height: 400px;
	max-width: 400px;
	margin-inline: auto;
}

/* imput file image post */
.img-preview {
	width: 100%;
	margin-bottom: 10px;
}

.custom-file-input {
	display: none; // Nasconde l'input del file predefinito
}

.custom-file-label {
	display: block;
	width: 100%;
	padding: 0.375rem 0.75rem;
	font-size: 1rem;
	font-weight: 400;
	line-height: 1.5;
	color: #495057;
	background-color: #fff;
	background-clip: padding-box;
	border: 1px solid #ced4da;
	border-radius: 0.25rem;
	transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
	cursor: pointer;
}

.custom-file-label::after {
	content: "Browse";
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	background-color: #007bff;
	color: #fff;
	padding: 0.375rem 0.75rem;
	border-top-right-radius: 0.25rem;
	border-bottom-right-radius: 0.25rem;
}

.user-img-post {
	max-width: 35px;
	max-width: 35px;
}

.user-img-comment {
	max-width: 20px;
	max-width: 20px;
}

.post-card,
.comment {
	background-color: $black;
	border: 0.5px solid lighten($all, 20%);
}
// .icon-post:hover {
// 	background-color: $white;
// }

.like-profile-images {
	display: flex;
	position: relative;
}

.profile-image {
	width: 20px;
	height: 20px;
	border-radius: 50%;
	border: 2px solid $all;
	object-fit: cover;
	position: absolute;
}

.profile-image.overlapped {
	left: 15px;
}

// .like-username {
// 	margin-left: 45px;
// }

.user-img-info {
	max-width: 100px;
	max-height: 100px;
}

.dropdown-toggle::after {
	display: none;
}

.btn:hover,
.btn:active,
.btn:focus,
.btn:focus-visible,
.btn:active:focus {
	color: var(--bs-btn-hover-color);
	background-color: var(--bs-btn-hover-bg);
	border-color: transparent;
}

.dropdown-menu,
.dropdown-menu.actvie,
.dropdown-menu:active,
.dropdown-menu:focus,
.dropdown-menu:focus-visible {
	background-color: $all;
	color: $white;
}

.dropdown-item,
.dropdown-item:active,
.dropdown-item:focus,
.dropdown-item:focus-visible,
.dropdown-item.active {
	background-color: $all;
	color: $white;
}

.dropdown-item:hover {
	background-color: $body;
	color: $white;
}

.icon-like.liked {
	color: rgb(171, 0, 0);
}

.span-top {
	top: -12px;
}

.dot {
	color: $white;
}

.mylink {
	text-decoration: none;
	color: lighten($primary, 20%);
	&:hover {
		color: $gold;
		text-decoration: underline;
	}
}

.form-control::placeholder {
	color: lighten($primary, 20%);
}
.form-control {
	background: transparent;
	border: none;
	border-bottom: 1px solid #ced4da;
}

.form-label {
	color: lighten($primary, 20%) !important;
	opacity: 0.8;
	position: absolute;
	top: -15px;
	left: 10px;
}
.form-control:focus,
.form-control:not(:placeholder-shown) {
	outline: none;
	box-shadow: none;
}

.comment-top {
	top: -25px;
	right: -5px;
}

.slick-prev {
	left: 10px;
}
.slick-next {
	right: 10px;
}

.logout-text {
	color: white;
}
.logout-text:hover {
	color: #000;
}

.navbar-nav .nav-link.show {
	color: lighten($body, 40%);
}

.post-modal {
	color: $white;
	.modal-content {
		background-color: darken($body, 20%);
	}
	.form-control {
		color: $white;
		border: 0;
		border-color: transparent;
		&:focus {
			background-color: darken($body, 20%);
			color: $white;
			border: 0;
			border-color: transparent;
		}
	}
}

.img-post {
	height: 500px;
	width: auto;
}

.bef-logo:before {
	-webkit-background-attachment: fixed;
	background-attachment: fixed;
	background-image: url(/assets/img/png-prova-dark-mode.png);
	background-position: 50%;
	background-repeat: repeat;
	background-size: 5%;
	bottom: 0;
	content: "";
	left: 0;
	opacity: 0.2;
	position: absolute;
	right: 0;
	top: 0;
	z-index: -1;
}

.yscroll-none {
	overflow-y: hidden;
}

.xscroll-none {
	overflow-x: hidden;
}

.no-scrol {
	overflow-y: hidden;
	overflow-x: hidden;
}

.no-scrollbar {
	scrollbar-width: none; /* Nasconde la scrollbar su Firefox */
}

.no-scrollbar::-webkit-scrollbar {
	display: none; /* Nasconde la scrollbar su WebKit browsers come Chrome e Safari */
}

.text-underline {
	text-decoration: underline;
}

// input[type="file"] {
// }

.Toastify__close-button svg {
	fill: $gold !important; // Applica il colore dorato alla X
}

.Toastify__close-button:hover svg {
	fill: $gold !important;
}

.Toastify--animate-icon svg {
	fill: $gold !important;
}

.Toastify__toast-body > div:last-child {
	color: lighten($primary, 20%) !important;
}

.Toastify__progress-bar--wrp {
	background-color: darken($primary, 20%) !important;
}

.Toastify__progress-bar--success {
	background-color: lighten($primary, 20%) !important;
}

.button-range {
	margin: 0 4px;
	border: 0;
	cursor: pointer;
	background-color: #999fdf;
	color: #000;
	transition: background-color 0.3s, color 0.3s;
}

.button-range:hover {
	background-color: #777bdf; /* Colore più scuro per l'hover */
	color: #fff;
	border: 0;
}

.button-range.selected {
	background-color: lighten(#0c0a2b, 10%); /* Colore di sfondo per il bottone selezionato */
	color: #c0a868; /* Colore del testo per il bottone selezionato */
	border: 0;
}

.detlink {
	color: $black;
	&:hover {
		color: $gold;
	}
}

.bronze {
	color: #cd7f32; /* Bronzo */
}

.silver {
	color: #c0c0c0; /* Argento */
}

.gold {
	color: $gold; /* Oro */
}
.tooltip.show {
	opacity: 1;
	&.custom-tooltip {
		background-color: $all;
		// color: #fff;
		font-weight: bold;
		> .tooltip-inner {
			padding: 0;
		}
	}
}

form#productForm {
	.form-control {
		color: $white;
		&:focus {
			background-color: $all;
		}
	}
}
